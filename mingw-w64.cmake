# Ref: http://www.cmake.org/Wiki/CMake_Cross_Compiling

SET(WIN32 1)
SET(CMAKE_VERBOSE_MAKEFILE TRUE)

# Disable precompiled headers -> gives compile errors when cross-compiling to mingw64
SET(ENABLE_PRECOMPILED_HEADERS FALSE CACHE BOOL "Don't use PCH")

# the name of the target operating system
SET(CMAKE_SYSTEM_NAME Windows)
SET(CMAKE_CROSSCOMPILING TRUE)


# which compilers to use for C and C++
SET(CMAKE_C_COMPILER   x86_64-w64-mingw32-gcc)
SET(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)
SET(CMAKE_RC_COMPILER  x86_64-w64-mingw32-windres)
SET(CMAKE_RANLIB       x86_64-w64-mingw32-ranlib)

#add_definitions( -static-libgcc -static-libstdc++)
add_definitions( -shared)

#This sets where CMAKE will put files generated by 'make install'
SET(CMAKE_INSTALL_PREFIX ${CMAKE_SOURCE_DIR}/install CACHE PATH "install path")

#List of root paths to search on the filesystem. CMake uses the paths in this list as alternative roots to find filesystem items with find_package(), find_library() etc.
SET(CMAKE_FIND_ROOT_PATH /usr/x86_64-w64-mingw32 )

#SET(CMAKE_FIND_ROOT_PATH /home/armin/dev/tools/mingw-w64-x86_64 /home/armin/.wine/default/drive_c/Program\ Files/Java/jdk1.7.0_71 /home/armin/dev/firepick/winbuild/opencv/target /home/armin/dev/firepick/winbuild/install)


# adjust the default behaviour of the FIND_XXX() commands:
# search headers and libraries in the target environment, search 
# programs in the host environment
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

